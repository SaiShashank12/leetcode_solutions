class Solution:
    def minMalwareSpread(self, graph: List[List[int]], initial: List[int]) -> int:
        parent=[-1]*len(graph)
        connections=[]
        
        def find(x):
            if parent[x]>=0:
                return find(parent[x])
            return x
        def union(x,y):
            if parent[x]<=parent[y]:
                parent[x]+=parent[y]
                parent[y]=x
            else:
                parent[y]+=parent[x]
                parent[x]=y
                
        for i in range(len(graph)):
            for j in range(i+1,len(graph)):
                if graph[i][j]==1:
                    connections.append([i,j])
        for i in connections:
            x=find(i[0])
            y=find(i[1])
            if x!=y:
                union(x,y)
        count=collections.Counter(find(u) for u in initial)
        result=(-1,min(initial))
        for i in initial:
            root=find(i)
            if count[root]==1:
                if abs(parent[root])>result[0]:
                    result=abs(parent[root]),i
                elif abs(parent[root])==result[0] and i<result[1]:
                    result=abs(parent[root]),i
        return result[1]
            
            
        